{"version":3,"sources":["components/Pokemon.js","graphql/get-pokemon.js","containers/PokemonContainer.js","App.js","index.js"],"names":["Pokemon","pokemon","className","name","maxHP","maxCP","src","image","alt","attacks","special","slice","map","attack","index","GET_POKEMONS","gql","PokemonContainer","useQuery","variables","first","data","pokemons","id","App","client","ApolloClient","uri","render","document","getElementById"],"mappings":"gMAEO,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QACxB,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,4BAAID,EAAQE,SAEd,sBAAKD,UAAU,gBAAf,UACG,IACD,+BAAOD,EAAQG,QACf,+BAAOH,EAAQI,QAAc,OAE/B,qBAAKH,UAAU,iBAAf,SACE,qBAAKI,IAAKL,EAAQM,MAAOC,IAAKP,EAAQE,SAExC,qBAAKD,UAAU,mBAAf,SACGD,EAAQQ,QAAQC,QAAQC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAQC,GAAT,OACvC,+BAAmBD,EAAOV,MAAfW,W,+TChBd,IAAMC,E,MAAeC,GAAH,KCElB,SAASC,IAAoB,IAAD,EACQC,YAASH,EAAc,CAC9DI,UAAW,CAAEC,MAAO,KADdC,KADyB,gBACC,GADD,GACjBC,gBADiB,MACN,GADM,EAIjC,OACE,qBAAKpB,UAAU,YAAf,SACGoB,GACCA,EAASV,KAAI,SAACX,GAAD,OACX,cAACD,EAAD,CAASC,QAASA,GAAcA,EAAQsB,SCOnCC,MAbf,WACE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,yCAEP,OACE,cAAC,IAAD,CAAgBF,OAAQA,EAAxB,SACE,+BACE,cAACR,EAAD,SCTRW,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3aeec2eb.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Pokemon({ pokemon }) {\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon__name\">\n        <p>{pokemon.name}</p>\n      </div>\n      <div className=\"pokemon__meta\">\n        {' '}\n        <span>{pokemon.maxHP}</span>\n        <span>{pokemon.maxCP}</span>{' '}\n      </div>\n      <div className=\"pokemon__image\">\n        <img src={pokemon.image} alt={pokemon.name} />\n      </div>\n      <div className=\"pokemon__attacks\">\n        {pokemon.attacks.special.slice(0, 3).map((attack, index) => (\n          <span key={index}>{attack.name}</span>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import gql from 'graphql-tag';\n\nexport const GET_POKEMONS = gql`\n  query pokemons($first: Int!) {\n    pokemons(first: $first) {\n      id\n      name\n      image\n      maxHP\n      maxCP\n      attacks {\n        special {\n          name\n          damage\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Pokemon } from '../components/Pokemon';\nimport { GET_POKEMONS } from '../graphql/get-pokemon';\nexport function PokemonContainer() {\n  const { data: { pokemons = [] } = {} } = useQuery(GET_POKEMONS, {\n    variables: { first: 9 },\n  });\n  return (\n    <div className=\"container\">\n      {pokemons &&\n        pokemons.map((pokemon) => (\n          <Pokemon pokemon={pokemon} key={pokemon.id} />\n        ))}\n    </div>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { PokemonContainer } from './containers/PokemonContainer';\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: 'https://graphql-pokemon2.vercel.app/',\n  });\n  return (\n    <ApolloProvider client={client}>\n      <main>\n        <PokemonContainer />\n      </main>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}